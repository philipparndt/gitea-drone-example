version: '3'

services:
  gitea:
    image: gitea/gitea:1.11.4
    container_name: gitea
    environment:
      - USER_UID=1000
      - USER_GID=1000
      - RUN_MODE=prod
    ports:
      - 3000:3000
    volumes:
      - ./ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt:ro
      - /volume1/docker/gitea:/data
    restart: always

  drone-server:
    container_name: drone_server
    image: drone/drone:1.7.0
    ports:
      - 3001:80
      - 3002:443
    volumes:
      - ./ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt:ro
      - /volume1/docker/drone:/var/lib/drone/
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    environment:
      # TODO: Login to gitea and register an oauth application
      # name: drone
      # redirect-uri: http://<IP-OF-THE-NAS>:3001/login
      # you will get a client id to be placed here:
      - DRONE_GITEA_CLIENT_ID=<TODO CLIENT_ID>

      # and a secret to be placed here:
      - DRONE_GITEA_CLIENT_SECRET=<TODO CLIENT_SECRET>

      # TODO: gitea url
      - DRONE_GITEA_SERVER=https://gitea.example.com

      # TODO: insert random secret string here
      - DRONE_RPC_SECRET=<TODO RANDOM-SECRET-API-STRING>      
      - DRONE_GIT_ALWAYS_AUTH=false
      - DRONE_AGENTS_ENABLED=false
      - DRONE_RPC_PROTO=https

      # TODO: drone URL
      - DRONE_SERVER_HOST=drone.example.com
      - DRONE_SERVER_PROTO=https
      
      # TODO: adminuser (gitea admin user name)
      - DRONE_USER_CREATE=username:adminuser,admin:true
      - DRONE_LOGS_DEBUG=true
      - DRONE_LOGS_TRACE=true
      - DRONE_LOGS_PRETTY=true
      - DRONE_LOGS_COLOR=true
      - DRONE_DATABASE_DRIVER=sqlite3
      - DRONE_DATABASE_DATASOURCE=/var/lib/drone/drone.sqlite
      - DRONE_RUNNER_CAPACITY=1
      - DRONE_TLS_AUTOCERT=false
    depends_on:
      - gitea
  drone-agent:
    container_name: drone_agent
    image: drone/agent:1.6.2
    ports:
      - 3003:3000
    volumes:
      - ./ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt:ro
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    environment:
      # TODO: drone host name
      - DRONE_RPC_HOST=drone.example.com
      - DRONE_RPC_PROTO=https

      # TODO: insert random secret string here (same as in drone-server)
      - DRONE_RPC_SECRET=<TODO RANDOM-SECRET-API-STRING>
      - DRONE_RUNNER_CAPACITY=1
      - DRONE_RUNNER_NAME=runnerone
      - DRONE_LOGS_TRACE=true
      - DRONE_LOGS_PRETTY=true
      - DRONE_LOGS_COLOR=true
    depends_on:
      - drone-server
